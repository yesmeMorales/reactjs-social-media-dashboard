{"version":3,"sources":["images/icon-up.svg","images/icon-facebook.svg","images/icon-twitter.svg","images/icon-instagram.svg","images/icon-youtube.svg","images/icon-down.svg","switch.js","header.js","card.js","top-card-list.js","card-small.js","overview.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Switch","setDarkMode","checked","setChecked","ref","useRef","className","onChange","e","event","console","log","current","type","id","htmlFor","Header","Card","userName","iconSocialNetwork","iconUp","todayFollowers","name","followers","src","alt","cardListData","iconFacebook","iconTwitter","iconInstagram","iconYoutube","TopCardList","map","cardData","index","key","CardSmall","icon","pagesViews","growth","iconDown","cardSmallList","Overview","cardSmall","App","useState","darkMode","changeMedia","mq","matches","useEffect","window","matchMedia","addListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,wRC8C5BC,MA3Cf,YAAuD,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WAEhCC,EAAMC,iBAAO,MAsBnB,OACE,yBAAKC,UAAU,aACb,uBAAGA,UAAU,mBAAb,aAEA,2BACEF,IAAKA,EACLG,SAAU,SAACC,GAAD,OAbMC,EAacD,EAZlCE,QAAQC,IAAIF,GACZC,QAAQC,IAAIP,EAAIQ,QAAQV,SACxBC,EAAWC,EAAIQ,QAAQV,cACvBD,EAAYG,EAAIQ,QAAQV,SAJ1B,IAAsBO,GAchBI,KAAK,WACLP,UAAU,WACVQ,GAAG,WACHZ,QAASA,IAEX,2BAAOI,UAAU,SAASS,QAAQ,YAC/B,O,MCdMC,MApBf,YAAuD,IAArCf,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACtC,OACE,4BAAQG,UAAU,UAChB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,eACb,6BACE,sDACA,uBAAGA,UAAU,gBAAb,4BAEF,kBAAC,EAAD,CACEL,YAAaA,EACbC,QAASA,EACTC,WAAYA,Q,sFCYTc,MA1Bf,YAOI,IANFC,EAMC,EANDA,SACAC,EAKC,EALDA,kBACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,KACAC,EACC,EADDA,UAEA,OACE,6BAASjB,UAAS,eAAUgB,IAC1B,uBAAGhB,UAAU,cACX,yBAAKkB,IAAKL,EAAmBM,IAAI,KAChCP,GAEH,uBAAGZ,UAAU,kBACX,0BAAMA,UAAU,yBAAyBiB,GACzC,0BAAMjB,UAAU,wBAAhB,cAEF,uBAAGA,UAAU,cACX,yBAAKkB,IAAKJ,EAAQK,IAAI,OACrBJ,EAFH,YCXAK,G,MAAe,CACnB,CACER,SAAU,WACVC,kBAAmBQ,IACnBP,OAAQA,IACRG,UAAW,GACXF,eAAgB,GAChBC,KAAM,YAER,CACEJ,SAAU,SACVC,kBAAmBS,IACnBR,OAAQA,IACRG,UAAW,GACXF,eAAgB,GAChBC,KAAM,WAER,CACEJ,SAAU,WACVC,kBAAmBU,IACnBT,OAAQA,IACRG,UAAW,GACXF,eAAgB,GAChBC,KAAM,aAER,CACEJ,SAAU,WACVC,kBAAmBW,IACnBV,OAAQA,IACRG,UAAW,EACXF,gBAAiB,GACjBC,KAAM,aAiBKS,MAbf,WACE,OACE,6BAASzB,UAAU,aACjB,yBAAKA,UAAU,WACb,yBAAKA,UAAU,QACZoB,EAAaM,KAAI,SAACC,EAAUC,GAAX,OAChB,kBAAC,EAAD,eAAMC,IAAKD,GAAWD,W,wBCrBnBG,MAzBf,YAAqE,IAAhDjB,EAA+C,EAA/CA,kBAAmBkB,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,WAAYC,EAAU,EAAVA,OACxD,OACE,yBAAKjC,UAAU,cACb,uBAAGA,UAAU,oBAAb,cACA,uBAAGA,UAAU,mBACX,yBAAKkB,IAAKL,EAAmBM,IAAI,MAEnC,uBAAGnB,UAAU,qBAAqBgC,GAClC,uBACEhC,UAAS,UACPiC,EAAS,EACL,kCACA,0BAGN,8BACGA,EAAS,GAAK,yBAAKf,IAAKgB,IAAUf,IAAI,KACtCc,EAAS,GAAK,yBAAKf,IAAKa,EAAMZ,IAAI,KAClCc,EAHH,QCTFE,G,MAAgB,CACpB,CACEtB,kBAAmBQ,IACnBU,KAAMA,IACNC,WAAY,GACZC,OAAQ,GAEV,CACEpB,kBAAmBQ,IACnBU,KAAMA,IACNC,WAAY,GACZC,QAAS,GAEX,CACEpB,kBAAmBU,IACnBQ,KAAMA,IACNC,WAAY,KACZC,OAAQ,MAEV,CACEpB,kBAAmBU,IACnBQ,KAAMA,IACNC,WAAY,IACZC,OAAQ,KAEV,CACEpB,kBAAmBS,IACnBS,KAAMA,IACNC,WAAY,IACZC,OAAQ,KAEV,CACEpB,kBAAmBS,IACnBS,KAAMA,IACNC,WAAY,IACZC,OAAQ,IAEV,CACEpB,kBAAmBW,IACnBO,KAAMA,IACNC,WAAY,IACZC,OAAQ,IAEV,CACEpB,kBAAmBW,IACnBO,KAAMA,IACNC,WAAY,KACZC,OAAQ,MAqHGG,MAjHf,WACE,OACE,6BAASpC,UAAU,YACjB,yBAAKA,UAAU,WACb,gDACA,yBAAKA,UAAU,QACZmC,EAAcT,KAAI,SAACW,EAAWT,GAAZ,OACjB,kBAAC,EAAD,eAAWC,IAAKD,GAAWS,WC9BxBC,MAjCf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNC,EADM,KACI7C,EADJ,OAEiB4C,oBAAS,GAF1B,mBAEN3C,EAFM,KAEGC,EAFH,KAIb,SAAS4C,EAAYC,GACnB/C,EAAY+C,EAAGC,SACf9C,EAAW6C,EAAGC,SAYhB,OATAC,qBAAU,WACR,IAAMF,EAAKG,OAAOC,WAAW,gCAC7BJ,EAAGK,YAAYN,GACf9C,EAAY+C,EAAGC,SACf9C,EAAW6C,EAAGC,WACb,IAKD,0BACE3C,UAAS,WAAkB,IAAbwC,EAAoB,eAAiB,gBAA1C,MAET,kBAAC,EAAD,CACE7C,YAAaA,EACbC,QAASA,EACTC,WAAYA,IAEd,kBAAC,EAAD,MACA,kBAAC,EAAD,QCvBcmD,QACW,cAA7BH,OAAOI,SAASC,UAEe,UAA7BL,OAAOI,SAASC,UAEhBL,OAAOI,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5D,QAAQ4D,MAAMA,EAAMC,c","file":"static/js/main.e761ccc8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-up.95f916a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-facebook.a7383764.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-twitter.810ccee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-instagram.991487fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-youtube.8499da12.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-down.69a5c77f.svg\";","import React, { useRef } from \"react\";\r\nimport \"./switch.css\";\r\n\r\nfunction Switch({ setDarkMode, checked, setChecked }) {\r\n  // ref es una referencia a un valor mutable(que puede cambiar)\r\n  const ref = useRef(null);\r\n  //const [checked, setChecked] = useState(defaultChecked);\r\n\r\n  //Forma de implementarlo con el target del evento\r\n  // const handleChange = (e) => {\r\n  //   console.log(e.target.checked);\r\n  //   if (e.target.checked) {\r\n  //     document.body.classList.remove(\"is-light-mode\");\r\n  //     document.body.classList.add(\"is-dark-mode\");\r\n  //   } else {\r\n  //     document.body.classList.remove(\"is-dark-mode\");\r\n  //     document.body.classList.add(\"is-light-mode\");\r\n  //   }\r\n  // };\r\n  // Implementaci√≥n con hooks dependemos del elemento ya seteado\r\n  function handleChange(event) {\r\n    console.log(event);\r\n    console.log(ref.current.checked);\r\n    setChecked(ref.current.checked);\r\n    setDarkMode(ref.current.checked);\r\n  }\r\n\r\n  return (\r\n    <div className=\"dark-mode\">\r\n      <p className=\"dark-mode-title\">Dark Mode</p>\r\n\r\n      <input\r\n        ref={ref}\r\n        onChange={(e) => handleChange(e)}\r\n        type=\"checkbox\"\r\n        className=\"checkbox\"\r\n        id=\"checkbox\"\r\n        checked={checked}\r\n      />\r\n      <label className=\"switch\" htmlFor=\"checkbox\">\r\n        {\" \"}\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n","import React from \"react\";\r\n\r\nimport Switch from \"./switch\";\r\n\r\nimport \"./header.css\";\r\n\r\nfunction Header({ setDarkMode, checked, setChecked }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"header-grid\">\r\n          <div>\r\n            <h1>Social Media Dashboard</h1>\r\n            <p className=\"header-total\">Total Followers: 23,004</p>\r\n          </div>\r\n          <Switch\r\n            setDarkMode={setDarkMode}\r\n            checked={checked}\r\n            setChecked={setChecked}\r\n          />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nimport \"./card.css\";\r\n\r\nfunction Card({\r\n  userName,\r\n  iconSocialNetwork,\r\n  iconUp,\r\n  todayFollowers,\r\n  name,\r\n  followers,\r\n}) {\r\n  return (\r\n    <article className={`card ${name}`}>\r\n      <p className=\"card-title\">\r\n        <img src={iconSocialNetwork} alt=\"\"></img>\r\n        {userName}\r\n      </p>\r\n      <p className=\"card-followers\">\r\n        <span className=\"card-followers-number\">{followers}</span>\r\n        <span className=\"card-followers-title\">Followers</span>\r\n      </p>\r\n      <p className=\"card-today\">\r\n        <img src={iconUp} alt=\"up\" />\r\n        {todayFollowers} today\r\n      </p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport iconFacebook from \"./images/icon-facebook.svg\";\r\nimport iconUp from \"./images/icon-up.svg\";\r\nimport iconTwitter from \"./images/icon-twitter.svg\";\r\nimport iconInstagram from \"./images/icon-instagram.svg\";\r\nimport iconYoutube from \"./images/icon-youtube.svg\";\r\n\r\nimport Card from \"./card\";\r\nimport \"./top-cards.css\";\r\n\r\nconst cardListData = [\r\n  {\r\n    userName: \"@Chesmin\",\r\n    iconSocialNetwork: iconFacebook,\r\n    iconUp: iconUp,\r\n    followers: 30,\r\n    todayFollowers: 10,\r\n    name: \"facebook\",\r\n  },\r\n  {\r\n    userName: \"@Yesme\",\r\n    iconSocialNetwork: iconTwitter,\r\n    iconUp: iconUp,\r\n    followers: 28,\r\n    todayFollowers: 12,\r\n    name: \"twitter\",\r\n  },\r\n  {\r\n    userName: \"@Chesmin\",\r\n    iconSocialNetwork: iconInstagram,\r\n    iconUp: iconUp,\r\n    followers: 10,\r\n    todayFollowers: 12,\r\n    name: \"instagram\",\r\n  },\r\n  {\r\n    userName: \"@Chesmin\",\r\n    iconSocialNetwork: iconYoutube,\r\n    iconUp: iconUp,\r\n    followers: 5,\r\n    todayFollowers: -50,\r\n    name: \"youtube\",\r\n  },\r\n];\r\n\r\nfunction TopCardList() {\r\n  return (\r\n    <section className=\"top-cards\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"grid\">\r\n          {cardListData.map((cardData, index) => (\r\n            <Card key={index} {...cardData} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default TopCardList;\r\n","import React from \"react\";\r\n\r\nimport \"./card-small.css\";\r\n\r\nimport iconDown from \"./images/icon-down.svg\";\r\n\r\nfunction CardSmall({ iconSocialNetwork, icon, pagesViews, growth }) {\r\n  return (\r\n    <div className=\"card-small\">\r\n      <p className=\"card-small-views\">Page Views</p>\r\n      <p className=\"card-small-icon\">\r\n        <img src={iconSocialNetwork} alt=\"\" />\r\n      </p>\r\n      <p className=\"card-small-number\">{pagesViews}</p>\r\n      <p\r\n        className={`${\r\n          growth < 0\r\n            ? \"card-small-percentage is-danger\"\r\n            : \"card-small-percentage\"\r\n        }`}\r\n      >\r\n        <span>\r\n          {growth < 0 && <img src={iconDown} alt=\"\" />}\r\n          {growth > 0 && <img src={icon} alt=\"\" />}\r\n          {growth}%\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSmall;\r\n","import React from \"react\";\r\n\r\nimport iconFacebook from \"./images/icon-facebook.svg\";\r\nimport iconTwitter from \"./images/icon-twitter.svg\";\r\nimport iconInstagram from \"./images/icon-instagram.svg\";\r\nimport iconYoutube from \"./images/icon-youtube.svg\";\r\nimport icon from \"./images/icon-up.svg\";\r\n\r\nimport CardSmall from \"./card-small\";\r\n\r\nimport \"./overview.css\";\r\n\r\nconst cardSmallList = [\r\n  {\r\n    iconSocialNetwork: iconFacebook,\r\n    icon: icon,\r\n    pagesViews: 87,\r\n    growth: 3,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconFacebook,\r\n    icon: icon,\r\n    pagesViews: 52,\r\n    growth: -2,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconInstagram,\r\n    icon: icon,\r\n    pagesViews: 5462,\r\n    growth: 2257,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconInstagram,\r\n    icon: icon,\r\n    pagesViews: 117,\r\n    growth: 303,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconTwitter,\r\n    icon: icon,\r\n    pagesViews: 507,\r\n    growth: 562,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconTwitter,\r\n    icon: icon,\r\n    pagesViews: 107,\r\n    growth: 10,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconYoutube,\r\n    icon: icon,\r\n    pagesViews: 107,\r\n    growth: 19,\r\n  },\r\n  {\r\n    iconSocialNetwork: iconYoutube,\r\n    icon: icon,\r\n    pagesViews: 1407,\r\n    growth: 12,\r\n  },\r\n];\r\n\r\nfunction Overview() {\r\n  return (\r\n    <section className=\"overview\">\r\n      <div className=\"wrapper\">\r\n        <h2>Overview - Today</h2>\r\n        <div className=\"grid\">\r\n          {cardSmallList.map((cardSmall, index) => (\r\n            <CardSmall key={index} {...cardSmall} />\r\n          ))}\r\n\r\n          {/* <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Likes</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-facebook.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">52</p>\r\n            <p class=\"card-small-percentage is-danger\">\r\n              <span>\r\n                <img src=\"./images/icon-down.svg\" alt=\"\" />\r\n                -2%\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Profile Views</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-instagram.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">5462</p>\r\n            <p class=\"card-small-percentage\">\r\n              <span>\r\n                <img src=\"./images/icon-up.svg\" alt=\"\" />\r\n                2257%\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Retweets</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-instagram.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">117</p>\r\n            <p class=\"card-small-percentage\">\r\n              <span>\r\n                <img src=\"./images/icon-up.svg\" alt=\"\" />\r\n                303%\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Likes</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-twitter.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">507</p>\r\n            <p class=\"card-small-percentage\">\r\n              <span>\r\n                <img src=\"./images/icon-up.svg\" alt=\"\" />\r\n                562%\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Likes</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-twitter.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">107</p>\r\n            <p class=\"card-small-percentage is-danger\">\r\n              <span>\r\n                <img src=\"./images/icon-down.svg\" alt=\"\" />\r\n                10%\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Likes</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-youtube.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">107</p>\r\n            <p class=\"card-small-percentage is-danger\">\r\n              <span>\r\n                <img src=\"./images/icon-down.svg\" alt=\"\" />\r\n                19%\r\n              </span>\r\n            </p>\r\n          </div>\r\n\r\n          <div class=\"card-small\">\r\n            <p class=\"card-small-views\">Total Views</p>\r\n            <p class=\"card-small-icon\">\r\n              <img src=\"./images/icon-youtube.svg\" alt=\"\" />\r\n            </p>\r\n            <p class=\"card-small-number\">1407</p>\r\n            <p class=\"card-small-percentage is-danger\">\r\n              <span>\r\n                <img src=\"./images/icon-down.svg\" alt=\"\" />\r\n                12%\r\n              </span>\r\n            </p>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Overview;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./globals.css\";\n\nimport Header from \"./header\";\nimport TopCardList from \"./top-card-list\";\nimport Overview from \"./overview\";\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n  const [checked, setChecked] = useState(false);\n\n  function changeMedia(mq) {\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    mq.addListener(changeMedia);\n    setDarkMode(mq.matches);\n    setChecked(mq.matches);\n  }, []);\n  // le pasamos ref cuando queremos ejecutar useEffect  cuando cambie el estado de ref\n  // si ref cambia ejecutamos lo que est√° en el hook\n\n  return (\n    <main\n      className={`${darkMode === true ? \"is-dark-mode\" : \"is-light-mode\"} `}\n    >\n      <Header\n        setDarkMode={setDarkMode}\n        checked={checked}\n        setChecked={setChecked}\n      />\n      <TopCardList />\n      <Overview />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}